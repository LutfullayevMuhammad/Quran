package com.lutfullayevmuhammad.quran.core.repoimport com.lutfullayevmuhammad.quran.core.api.QuranApiimport com.lutfullayevmuhammad.quran.core.helper.ResultWrapperimport com.lutfullayevmuhammad.quran.core.helper.parseResponseimport com.lutfullayevmuhammad.quran.core.models.error.UniversalErrorimport com.lutfullayevmuhammad.quran.core.models.sura.SuraResponseimport com.lutfullayevmuhammad.quran.core.models.suraDetails.SuraDetailsResponseimport com.lutfullayevmuhammad.quran.core.models.suraDetailsAudios.SuraDetailsAudioResponseimport com.lutfullayevmuhammad.quran.core.models.suraDetailsTranslations.SuraDetailsTranslationsResponseimport kotlinx.coroutines.Dispatchersimport javax.inject.Injectclass HomeRepo @Inject constructor(private val api: QuranApi) {    suspend fun suraData(q: String): ResultWrapper<SuraResponse?, UniversalError?> {        return parseResponse(Dispatchers.IO) {            api.suraList(q)        }    }    suspend fun suraDetailsData(chapterNumber: String): ResultWrapper<SuraDetailsResponse?, UniversalError?> {        return parseResponse(Dispatchers.IO) {            api.detailsSura(chapterNumber)        }    }    suspend fun suraDetailsTranslationsData(chapterNumber: String): ResultWrapper<SuraDetailsTranslationsResponse?, UniversalError?> {        return parseResponse(Dispatchers.IO) {            api.detailsSuraTranslations(chapterNumber)        }    }    suspend fun suraDetailsAudiosData(chapterNumber: String,page:String): ResultWrapper<SuraDetailsAudioResponse?, UniversalError?> {        return parseResponse(Dispatchers.IO) {            api.detailsSuraAudio(chapterNumber,page)        }    }}